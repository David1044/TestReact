import React, { Component } from 'react';
import { Text, View, StyleSheet } from 'react-native';
import { Constants } from 'expo';

class PinBoxList extends Component {
  static propTypes = {
    pinValue: React.PropTypes.string,
    pinLength: React.PropTypes.integer,
  };

  render() {
    return (
      <View
        style={{
          flex: -1,
          flexDirection: 'row',
          justifyContent: 'space-between',
        }}>
        {this.renderPills()}
      </View>
    );
  }

  renderPills() {
    let pills = [];

    for (var i = 0; i < this.props.pinLength; i++) {
      pills.push(this.renderPill(i + 1));
    }

    return pills;
  }

  renderPill(index) {
    return (
      <PinBox
        key={index}
        hasValue={this.props.pinValue && this.props.pinValue.length >= index}
      />
    );
  }
}

class PinBox extends Component {
  static propTypes = {
    hasValue: React.PropTypes.boolean,
  };

  render() {
    return (
      <View
        style={{
          borderBottomWidth: 3,
          borderBottomColor: 'black',
          height: 30,
          width: 30,
          marginRight: 14,
          alignItems: 'center',
          justifyContent: 'center',
        }}>
        {this.props.hasValue && <Text>â€¢</Text>}
      </View>
    );
  }
}

class PinKey extends Component {
  static propTypes = {
    label: React.PropTypes.string.isRequired,
    label2: React.PropTypes.string,
  };
  
  constructor(props) {
    super({label2: 'hi', ...props});
  }
  
  getDefaultProps() {
    return {
      label2: 'hi',
    }
  }
  
  static defaultProps = {
    label2: 'hi',
  };
  
  render() {
    return (
      <View style={[styles.pinKey, this.props.label.length == 0 && styles.pinKeyEmpty]}>
        <Text style={{fontSize: 26}}>{this.props.label}</Text>
        <Text style={{fontSize: 12}}>{this.props.label2}</Text>
      </View>
    );
  }
}

class PinKeyboard extends Component {
  render() {
    return (
      <View style={styles.pinKeyboard}>
        <PinKey label='1' />
        <PinKey label='2' label2='ABC' />
        <PinKey label='3' label2='DEF' />
        <PinKey label='4' label2='GHI' />
        <PinKey label='5' label2='JKL' />
        <PinKey label='6' label2='MNO' />
        <PinKey label='7' label2='PQRS' />
        <PinKey label='8' label2='TUV' />
        <PinKey label='9' label2='WXYZ' />
        <PinKey label='' />
        <PinKey label='0' />
        <PinKey label='' />
      </View>
    );
  }
}

export default class App extends Component {
  render() {
    return (
      <View style={styles.container}>
        <View style={styles.pinView}>
          <Text style={styles.pinPromptText}>Enter a passcode</Text>
          <PinBoxList pinLength={6} pinValue={'123'} />
        </View>
        <PinKeyboard></PinKeyboard>
      </View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1
  },
  pinView: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    paddingTop: Constants.statusBarHeight,
    backgroundColor: 'rgb(239, 239, 244)',
  },
  pinKeyboard: {
    flex: -1,
    flexShrink: 1,
    flexDirection: 'row',
    flexWrap: 'wrap',
  },
  pinKey: {
    alignItems: 'center',
    justifyContent: 'flex-start',
    width: 130,
    height: 70,
    borderWidth: 1,
    borderColor: 'rgb(239, 239, 244)',
    flexGrow: 1,
    paddingTop: 8
  },
  pinKeyEmpty: {
    backgroundColor: 'rgb(239, 239, 244)',
  },
  pinPromptText: {
    marginBottom: 10,
  }
});
